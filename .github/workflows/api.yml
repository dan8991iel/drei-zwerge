name: API

on:
  push:
  release:
    types: [published]

jobs:
  build-docker:
    runs-on: ubuntu-latest
    name: Build & publish Docker image
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build latest image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:api"
          push: false
          tags: ghcr.io/sepbfws420a/sieben-zwerge-api:latest
      - name: Push latest image
        uses: docker/build-push-action@v3
        if: ${{ github.ref_name == 'main' }}
        with:
          context: "{{defaultContext}}:api"
          push: true
          tags: ghcr.io/sepbfws420a/sieben-zwerge-api:latest
      - name: Build and push release image
        uses: docker/build-push-action@v3
        if: ${{ github.event_name == 'release' }}
        with:
          context: "{{defaultContext}}:api"
          push: true
          tags: ghcr.io/sepbfws420a/sieben-zwerge-api:${{ github.ref_name }}

  deploy-dev:
    runs-on: ubuntu-latest
    name: Deploy dev
    needs: [build-docker]
    if: github.event_name == 'push' && github.ref_name == 'main'
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd fhdw/sep-dev
            docker-compose pull api
            docker-compose up -d api

  deploy:
    runs-on: ubuntu-latest
    name: Deploy release
    needs: [build-docker, deploy-dev]
    if: github.event_name == 'release'
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd fhdw/sep-webshop
            docker-compose pull api
            docker-compose up -d api
