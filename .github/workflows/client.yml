name: Client

on:
  push:
  release:

jobs:
  build-npm:
    runs-on: ubuntu-latest
    name: Build & Test npm
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - run: npm ci
        working-directory: ./client
      - run: npm run lint
        working-directory: ./client
      - run: npm run test:unit -- --passWithNoTests
        working-directory: ./client
      - run: npm run build
        working-directory: ./client

  build-docker:
    runs-on: ubuntu-latest
    name: Build & publish Docker image
    steps:
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build latest image
        uses: docker/build-push-action@v3
        with:
          context: "{{defaultContext}}:client"
          push: false
          tags: ghcr.io/sepbfws420a/sieben-zwerge-client:latest
      -
        name: Push latest image
        uses: docker/build-push-action@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        with:
          context: "{{defaultContext}}:client"
          push: true
          tags: ghcr.io/sepbfws420a/sieben-zwerge-client:latest
      -
        name: Build and push release image
        uses: docker/build-push-action@v3
        if: ${{ github.event_name == 'release' }}
        with:
          context: "{{defaultContext}}:client"
          push: true
          tags: ghcr.io/sepbfws420a/sieben-zwerge-client:${{ github.ref }}

  deploy-dev:
    runs-on: ubuntu-latest
    name: Deploy dev
    needs: [build-npm, build-docker]
    if: github.push == 'release' && github.ref == 'refs/heads/main'
    steps:
      -
        name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd fhdw/sep-dev
            docker-compose pull client
            docker-compose up -d client

  deploy:
    runs-on: ubuntu-latest
    name: Deploy release
    needs: [build-npm, build-docker, deploy-dev]
    if: github.event_name == 'release'
    steps:
      -
        name: Deploy to server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd fhdw/sep-webshop
            docker-compose pull client
            docker-compose up -d client
